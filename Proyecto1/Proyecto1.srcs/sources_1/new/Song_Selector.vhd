library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity Song_Selector is
    Port (
        song_sel : in  std_logic_vector(1 downto 0); 
        add     : in  std_logic_vector(4 downto 0) ;
        dout     : out std_logic_vector(3 downto 0)
    );
end Song_Selector;

architecture Behavioral of Song_Selector is
    signal addr: integer := to_integer(unsigned(add)); 
    subtype note_t is std_logic_vector(3 downto 0);
    type song_array is array (0 to 31) of note_t;

    ----------------------------------------------------------------
    -- Canción 0: 32 simples
    ----------------------------------------------------------------
    constant song0 : song_array := (
        "0001","0010","0100","1000","0010","0100","1000","0001",
        "0100","0001","1000","0010","0001","1000","0100","0010",
        "1000","0001","0010","0100","1000","0010","0100","0001",
        "1000","0100","0010","0001","0100","1000","0001","0010"
    );

    ----------------------------------------------------------------
    -- Canción 1: 26 simples + 6 dobles (aleatorios)
    ----------------------------------------------------------------
    constant song1 : song_array := (
        "0001","0010","0100","1000","0010","0100","0011","0001",
        "1000","0100","1000","0001","0101","0010","0100","1000",
        "0001","0110","0010","1000","0100","0001","1010","0010",
        "0100","1000","1100","0001","1000","0010","0100","0001"
    );

    ----------------------------------------------------------------
    -- Canción 2: 22 simples + 10 dobles (aleatorios)
    ----------------------------------------------------------------
    constant song2 : song_array := (
        "0001","0011","0010","0100","1000","0110","0010","0001",
        "0100","1001","1000","0100","0001","1000","0101","0010",
        "1000","0100","1010","0001","0010","1100","0100","1000",
        "0011","0001","0101","0110","1001","1010","1100","0110"
    );

    ----------------------------------------------------------------
    -- Canción 3: 17 simples + 15 dobles (aleatorios)
    ----------------------------------------------------------------
    constant song3 : song_array := (
        "0001","0011","0010","0100","0110","1000","0010","0101",
        "1000","0001","0100","1010","0001","1000","0010","1100",
        "0100","1000","1001","0001","0110","0100","0110","0011",
        "1001","0101","1010","0110","1100","0011","0101","1000"
    );

begin
    with song_sel select
        dout <= song0(addr) when "00",
                song1(addr) when "01",
                song2(addr) when "10",
                song3(addr) when "11",
                (others => '0') when others;
end Behavioral;
